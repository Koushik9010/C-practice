#include<stdio.h>
#include<stdlib.h>

#define MAX 5

char queue[MAX];
int front = -1, rear = -1;

void insert();
void delete();
void display();
int isFull();
int isEmpty();

int main()
{
    int choice;
    while(1)
    {
        printf("\n\n---- CIRCULAR QUEUE MENU ----\n");
        printf("1.Insert\n2.Delete\n3.Display\n4.Exit\n");
        printf("Enter your choice: ");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
                insert();
                break;
            case 2:
                delete();
                break;
            case 3:
                display();
                break;
            case 4:
                exit(1);
            default:
                printf("\nInvalid choice!");
        }
    }
}

int isEmpty()
{
    if(front == -1 && rear == -1)
        return 1;
    else
        return 0;
}

int isFull()
{
    if((rear+1)%MAX == front)
        return 1;
    else
        return 0;
}

void insert()
{
    char item;
    if(isFull())
        printf("\nQueue Overflow!");
    else
    {
        printf("\nEnter the element to be inserted: ");
        scanf(" %c", &item);
        if(isEmpty())
            front = rear = 0;
        else
            rear = (rear+1)%MAX;
        queue[rear] = item;
        printf("\nElement inserted successfully!");
    }
}

void delete()
{
    char item;
    if(isEmpty())
        printf("\nQueue Underflow!");
    else
    {
        item = queue[front];
        if(front == rear)
            front = rear = -1;
        else
            front = (front+1)%MAX;
        printf("\nDeleted element: %c", item);
    }
}

void display()
{
    int i;
    if(isEmpty())
        printf("\nQueue is empty!");
    else
    {
        printf("\nElements in the queue: ");
        for(i=front; i!=rear; i=(i+1)%MAX)
            printf("%c ", queue[i]);
        printf("%c", queue[i]);
    }
}
